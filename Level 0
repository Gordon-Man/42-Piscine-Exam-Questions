/*
aff_a
ft_countdown
ft_print_numbers
hello
maff_alpha
aff_first_param
aff_last_param
maff_revalpha
only_a
only_z
aff_z
*/


/*
Assignment name  : aff_a
Expected files   : aff_a.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes a string, and displays the first 'a' character it
encounters in it, followed by a newline. If there are no 'a' characters in the
string, the program just writes a newline. If the number of parameters is not
1, the program displays 'a' followed by a newline.

Example:

$> ./aff_a "abc" | cat -e
a$
$> ./aff_a "dubO a POIL" | cat -e
a$
$> ./aff_a "zz sent le poney" | cat -e
$
$> ./aff_a | cat -e
a$
*/
#include <unistd.h>
void aff_a(char *str)
{
    //the main function calling this function must check the number of parameters. if not 1, display "a\n"
    while (*str)
    {
        if (*str == 'a')
        {
            write(1, "a\n", 2);
            return ;
        }
    }
    write(1, "\n", 1);
    return ;
}

/*
Assignment name  : ft_countdown
Expected files   : ft_countdown.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that displays all digits in descending order, followed by a
newline.

Example:
$> ./ft_countdown | cat -e
9876543210$
$>
*/
void ft_countdown()
{
    write(1, "9876543210\n", 11);
}

/*
Assignment name  : ft_print_numbers
Expected files   : ft_print_numbers.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a function that displays all digits in ascending order.

Your function must be declared as follows:

void	ft_print_numbers(void);
*/
void ft_print_numbers()
{
    write(1, "0123456789\n", 11);
}








